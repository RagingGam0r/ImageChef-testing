// all types of edge cases for codeify.mjs 
// Conversions most of the time refrence different text e.g "RGB2HSV" to "COLOR_RGB2HSV"
// But sometimes they are just the same text e.g "BORDER_DEFAULT" to "BORDER_DEFAULT"
// The reason why they equal each other is because they are meant to have a "cv." / "cv2." prefix in front of them, and this is a nice and simple way to implement that

var CommonConversions = { // common conversions, so i don't have to type them out every time and makes it look cleaner
    "BORDER" : {
        'BORDER_DEFAULT': 'BORDER_DEFAULT',
        'BORDER_CONSTANT': 'BORDER_CONSTANT',
        'BORDER_REPLICATE': 'BORDER_REPLICATE',
        'BORDER_REFLECT': 'BORDER_REFLECT',
        'BORDER_WRAP': 'BORDER_WRAP',
        'BORDER_TRANSPARENT': 'BORDER_TRANSPARENT',
        'BORDER_ISOLATED': 'BORDER_ISOLATED',
    },
}

var Cases = {
    // edge cases for: cvtColor
    cvtColor: {
        "Colour Space": {
            // edge cases for cvtColor - Colour Space          
            'BGR2BGRA': 'COLOR_BGR2BGRA',
            'RGB2RGBA': 'COLOR_RGB2RGBA',
            'BGRA2BGR': 'COLOR_BGRA2BGR',
            'RGBA2RGB': 'COLOR_RGBA2RGB',
            'BGR2RGBA': 'COLOR_BGR2RGBA',
            'RGB2BGRA': 'COLOR_RGB2BGRA',
            'RGBA2BGR': 'COLOR_RGBA2BGR',
            'BGRA2RGB': 'COLOR_BGRA2RGB',
            'BGR2RGB': 'COLOR_BGR2RGB',
            'RGB2BGR': 'COLOR_RGB2BGR',
            'BGRA2RGBA': 'COLOR_BGRA2RGBA',
            'RGBA2BGRA': 'COLOR_RGBA2BGRA',
            'BGR2GRAY': 'COLOR_BGR2GRAY',
            'RGB2GRAY': 'COLOR_RGB2GRAY',
            'GRAY2BGR': 'COLOR_GRAY2BGR',
            'GRAY2RGB': 'COLOR_GRAY2RGB',
            'GRAY2BGRA': 'COLOR_GRAY2BGRA',
            'GRAY2RGBA': 'COLOR_GRAY2RGBA',
            'BGRA2GRAY': 'COLOR_BGRA2GRAY',
            'RGBA2GRAY': 'COLOR_RGBA2GRAY',
            'BGR2BGR565': 'COLOR_BGR2BGR565',
            'RGB2BGR565': 'COLOR_RGB2BGR565',
            'BGR5652BGR': 'COLOR_BGR5652BGR',
            'BGR5652RGB': 'COLOR_BGR5652RGB',
            'BGRA2BGR565': 'COLOR_BGRA2BGR565',
            'RGBA2BGR565': 'COLOR_RGBA2BGR565',
            'BGR5652BGRA': 'COLOR_BGR5652BGRA',
            'BGR5652RGBA': 'COLOR_BGR5652RGBA',
            'GRAY2BGR565': 'COLOR_GRAY2BGR565',
            'BGR5652GRAY': 'COLOR_BGR5652GRAY',
            'BGR2BGR555': 'COLOR_BGR2BGR555',
            'RGB2BGR555': 'COLOR_RGB2BGR555',
            'BGR5552BGR': 'COLOR_BGR5552BGR',
            'BGR5552RGB': 'COLOR_BGR5552RGB',
            'BGRA2BGR555': 'COLOR_BGRA2BGR555',
            'RGBA2BGR555': 'COLOR_RGBA2BGR555',
            'BGR5552BGRA': 'COLOR_BGR5552BGRA',
            'BGR5552RGBA': 'COLOR_BGR5552RGBA',
            'GRAY2BGR555': 'COLOR_GRAY2BGR555',
            'BGR5552GRAY': 'COLOR_BGR5552GRAY',
            'BGR2XYZ': 'COLOR_BGR2XYZ',
            'RGB2XYZ': 'COLOR_RGB2XYZ',
            'XYZ2BGR': 'COLOR_XYZ2BGR',
            'XYZ2RGB': 'COLOR_XYZ2RGB',
            'BGR2YCrCb': 'COLOR_BGR2YCrCb',
            'RGB2YCrCb': 'COLOR_RGB2YCrCb',
            'YCrCb2BGR': 'COLOR_YCrCb2BGR',
            'YCrCb2RGB': 'COLOR_YCrCb2RGB',
            'BGR2HSV': 'COLOR_BGR2HSV',
            'RGB2HSV': 'COLOR_RGB2HSV',
            'BGR2Lab': 'COLOR_BGR2Lab',
            'RGB2Lab': 'COLOR_RGB2Lab',
            'BGR2Luv': 'COLOR_BGR2Luv',
            'RGB2Luv': 'COLOR_RGB2Luv',
            'BGR2HLS': 'COLOR_BGR2HLS',
            'RGB2HLS': 'COLOR_RGB2HLS',
            'HSV2BGR': 'COLOR_HSV2BGR',
            'HSV2RGB': 'COLOR_HSV2RGB',
            'Lab2BGR': 'COLOR_Lab2BGR',
            'Lab2RGB': 'COLOR_Lab2RGB',
            'Luv2BGR': 'COLOR_Luv2BGR',
            'Luv2RGB': 'COLOR_Luv2RGB',
            'HLS2BGR': 'COLOR_HLS2BGR',
            'HLS2RGB': 'COLOR_HLS2RGB',
            'BGR2HSV_FULL': 'COLOR_BGR2HSV_FULL',
            'RGB2HSV_FULL': 'COLOR_RGB2HSV_FULL',
            'BGR2HLS_FULL': 'COLOR_BGR2HLS_FULL',
            'RGB2HLS_FULL': 'COLOR_RGB2HLS_FULL',
            'HSV2BGR_FULL': 'COLOR_HSV2BGR_FULL',
            'HSV2RGB_FULL': 'COLOR_HSV2RGB_FULL',
            'HLS2BGR_FULL': 'COLOR_HLS2BGR_FULL',
            'HLS2RGB_FULL': 'COLOR_HLS2RGB_FULL',
            'LBGR2Lab': 'COLOR_LBGR2Lab',
            'LRGB2Lab': 'COLOR_LRGB2Lab',
            'LBGR2Luv': 'COLOR_LBGR2Luv',
            'LRGB2Luv': 'COLOR_LRGB2Luv',
            'Lab2LBGR': 'COLOR_Lab2LBGR',
            'Lab2LRGB': 'COLOR_Lab2LRGB',
            'Luv2LBGR': 'COLOR_Luv2LBGR',
            'Luv2LRGB': 'COLOR_Luv2LRGB',
            'BGR2YUV': 'COLOR_BGR2YUV',
            'RGB2YUV': 'COLOR_RGB2YUV',
            'YUV2BGR': 'COLOR_YUV2BGR',
            'YUV2RGB': 'COLOR_YUV2RGB',
            'YUV2RGB_NV12': 'COLOR_YUV2RGB_NV12',
            'YUV2BGR_NV12': 'COLOR_YUV2BGR_NV12',
            'YUV2RGB_NV21': 'COLOR_YUV2RGB_NV21',
            'YUV2BGR_NV21': 'COLOR_YUV2BGR_NV21',
            'YUV420sp2RGB': 'COLOR_YUV420sp2RGB',
            'YUV420sp2BGR': 'COLOR_YUV420sp2BGR',
            'YUV2RGBA_NV12': 'COLOR_YUV2RGBA_NV12',
            'YUV2BGRA_NV12': 'COLOR_YUV2BGRA_NV12',
            'YUV2RGBA_NV21': 'COLOR_YUV2RGBA_NV21',
            'YUV2BGRA_NV21': 'COLOR_YUV2BGRA_NV21',
            'YUV420sp2RGBA': 'COLOR_YUV420sp2RGBA',
            'YUV420sp2BGRA': 'COLOR_YUV420sp2BGRA',
            'YUV2RGB_YV12': 'COLOR_YUV2RGB_YV12',
            'YUV2BGR_YV12': 'COLOR_YUV2BGR_YV12',
            'YUV2RGB_IYUV': 'COLOR_YUV2RGB_IYUV',
            'YUV2BGR_IYUV': 'COLOR_YUV2BGR_IYUV',
            'YUV2RGB_I420': 'COLOR_YUV2RGB_I420',
            'YUV2BGR_I420': 'COLOR_YUV2BGR_I420',
            'YUV420p2RGB': 'COLOR_YUV420p2RGB',
            'YUV420p2BGR': 'COLOR_YUV420p2BGR',
            'YUV2RGBA_YV12': 'COLOR_YUV2RGBA_YV12',
            'YUV2BGRA_YV12': 'COLOR_YUV2BGRA_YV12',
            'YUV2RGBA_IYUV': 'COLOR_YUV2RGBA_IYUV',
            'YUV2BGRA_IYUV': 'COLOR_YUV2BGRA_IYUV',
            'YUV2RGBA_I420': 'COLOR_YUV2RGBA_I420',
            'YUV2BGRA_I420': 'COLOR_YUV2BGRA_I420',
            'YUV420p2RGBA': 'COLOR_YUV420p2RGBA',
            'YUV420p2BGRA': 'COLOR_YUV420p2BGRA',
            'YUV2GRAY_420': 'COLOR_YUV2GRAY_420',
            'YUV2GRAY_NV21': 'COLOR_YUV2GRAY_NV21',
            'YUV2GRAY_NV12': 'COLOR_YUV2GRAY_NV12',
            'YUV2GRAY_YV12': 'COLOR_YUV2GRAY_YV12',
            'YUV2GRAY_IYUV': 'COLOR_YUV2GRAY_IYUV',
            'YUV2GRAY_I420': 'COLOR_YUV2GRAY_I420',
            'YUV420sp2GRAY': 'COLOR_YUV420sp2GRAY',
            'YUV420p2GRAY': 'COLOR_YUV420p2GRAY',
            'YUV2RGB_UYVY': 'COLOR_YUV2RGB_UYVY',
            'YUV2BGR_UYVY': 'COLOR_YUV2BGR_UYVY',
            'YUV2RGB_Y422': 'COLOR_YUV2RGB_Y422',
            'YUV2BGR_Y422': 'COLOR_YUV2BGR_Y422',
            'YUV2RGB_UYNV': 'COLOR_YUV2RGB_UYNV',
            'YUV2BGR_UYNV': 'COLOR_YUV2BGR_UYNV',
            'YUV2RGBA_UYVY': 'COLOR_YUV2RGBA_UYVY',
            'YUV2BGRA_UYVY': 'COLOR_YUV2BGRA_UYVY',
            'YUV2RGBA_Y422': 'COLOR_YUV2RGBA_Y422',
            'YUV2BGRA_Y422': 'COLOR_YUV2BGRA_Y422',
            'YUV2RGBA_UYNV': 'COLOR_YUV2RGBA_UYNV',
            'YUV2BGRA_UYNV': 'COLOR_YUV2BGRA_UYNV',
            'YUV2RGB_YUY2': 'COLOR_YUV2RGB_YUY2',
            'YUV2BGR_YUY2': 'COLOR_YUV2BGR_YUY2',
            'YUV2RGB_YVYU': 'COLOR_YUV2RGB_YVYU',
            'YUV2BGR_YVYU': 'COLOR_YUV2BGR_YVYU',
            'YUV2RGB_YUYV': 'COLOR_YUV2RGB_YUYV',
            'YUV2BGR_YUYV': 'COLOR_YUV2BGR_YUYV',
            'YUV2RGB_YUNV': 'COLOR_YUV2RGB_YUNV',
            'YUV2BGR_YUNV': 'COLOR_YUV2BGR_YUNV',
            'YUV2RGBA_YUY2': 'COLOR_YUV2RGBA_YUY2',
            'YUV2BGRA_YUY2': 'COLOR_YUV2BGRA_YUY2',
            'YUV2RGBA_YVYU': 'COLOR_YUV2RGBA_YVYU',
            'YUV2BGRA_YVYU': 'COLOR_YUV2BGRA_YVYU',
            'YUV2RGBA_YUYV': 'COLOR_YUV2RGBA_YUYV',
            'YUV2BGRA_YUYV': 'COLOR_YUV2BGRA_YUYV',
            'YUV2RGBA_YUNV': 'COLOR_YUV2RGBA_YUNV',
            'YUV2BGRA_YUNV': 'COLOR_YUV2BGRA_YUNV',
            'YUV2GRAY_UYVY': 'COLOR_YUV2GRAY_UYVY',
            'YUV2GRAY_YUY2': 'COLOR_YUV2GRAY_YUY2',
            'YUV2GRAY_Y422': 'COLOR_YUV2GRAY_Y422',
            'YUV2GRAY_UYNV': 'COLOR_YUV2GRAY_UYNV',
            'YUV2GRAY_YVYU': 'COLOR_YUV2GRAY_YVYU',
            'YUV2GRAY_YUYV': 'COLOR_YUV2GRAY_YUYV',
            'YUV2GRAY_YUNV': 'COLOR_YUV2GRAY_YUNV',
            'RGBA2mRGBA': 'COLOR_RGBA2mRGBA',
            'mRGBA2RGBA': 'COLOR_mRGBA2RGBA',
            'RGB2YUV_I420': 'COLOR_RGB2YUV_I420',
            'BGR2YUV_I420': 'COLOR_BGR2YUV_I420',
            'RGB2YUV_IYUV': 'COLOR_RGB2YUV_IYUV',
            'BGR2YUV_IYUV': 'COLOR_BGR2YUV_IYUV',
            'RGBA2YUV_I420': 'COLOR_RGBA2YUV_I420',
            'BGRA2YUV_I420': 'COLOR_BGRA2YUV_I420',
            'RGBA2YUV_IYUV': 'COLOR_RGBA2YUV_IYUV',
            'BGRA2YUV_IYUV': 'COLOR_BGRA2YUV_IYUV',
            'RGB2YUV_YV12': 'COLOR_RGB2YUV_YV12',
            'BGR2YUV_YV12': 'COLOR_BGR2YUV_YV12',
            'RGBA2YUV_YV12': 'COLOR_RGBA2YUV_YV12',
            'BGRA2YUV_YV12': 'COLOR_BGRA2YUV_YV12',
            'BayerBG2BGR': 'COLOR_BayerBG2BGR',
            'BayerGB2BGR': 'COLOR_BayerGB2BGR',
            'BayerRG2BGR': 'COLOR_BayerRG2BGR',
            'BayerGR2BGR': 'COLOR_BayerGR2BGR',
            'BayerRGGB2BGR': 'COLOR_BayerRGGB2BGR',
            'BayerGRBG2BGR': 'COLOR_BayerGRBG2BGR',
            'BayerBGGR2BGR': 'COLOR_BayerBGGR2BGR',
            'BayerGBRG2BGR': 'COLOR_BayerGBRG2BGR',
            'BayerRGGB2RGB': 'COLOR_BayerRGGB2RGB',
            'BayerGRBG2RGB': 'COLOR_BayerGRBG2RGB',
            'BayerBGGR2RGB': 'COLOR_BayerBGGR2RGB',
            'BayerGBRG2RGB': 'COLOR_BayerGBRG2RGB',
            'BayerBG2RGB': 'COLOR_BayerBG2RGB',
            'BayerGB2RGB': 'COLOR_BayerGB2RGB',
            'BayerRG2RGB': 'COLOR_BayerRG2RGB',
            'BayerGR2RGB': 'COLOR_BayerGR2RGB',
            'BayerBG2GRAY': 'COLOR_BayerBG2GRAY',
            'BayerGB2GRAY': 'COLOR_BayerGB2GRAY',
            'BayerRG2GRAY': 'COLOR_BayerRG2GRAY',
            'BayerGR2GRAY': 'COLOR_BayerGR2GRAY',
            'BayerRGGB2GRAY': 'COLOR_BayerRGGB2GRAY',
            'BayerGRBG2GRAY': 'COLOR_BayerGRBG2GRAY',
            'BayerBGGR2GRAY': 'COLOR_BayerBGGR2GRAY',
            'BayerGBRG2GRAY': 'COLOR_BayerGBRG2GRAY',
            'BayerBG2BGR_VNG': 'COLOR_BayerBG2BGR_VNG',
            'BayerGB2BGR_VNG': 'COLOR_BayerGB2BGR_VNG',
            'BayerRG2BGR_VNG': 'COLOR_BayerRG2BGR_VNG',
            'BayerGR2BGR_VNG': 'COLOR_BayerGR2BGR_VNG',
            'BayerRGGB2BGR_VNG': 'COLOR_BayerRGGB2BGR_VNG',
            'BayerGRBG2BGR_VNG': 'COLOR_BayerGRBG2BGR_VNG',
            'BayerBGGR2BGR_VNG': 'COLOR_BayerBGGR2BGR_VNG',
            'BayerGBRG2BGR_VNG': 'COLOR_BayerGBRG2BGR_VNG',
            'BayerRGGB2RGB_VNG': 'COLOR_BayerRGGB2RGB_VNG',
            'BayerGRBG2RGB_VNG': 'COLOR_BayerGRBG2RGB_VNG',
            'BayerBGGR2RGB_VNG': 'COLOR_BayerBGGR2RGB_VNG',
            'BayerGBRG2RGB_VNG': 'COLOR_BayerGBRG2RGB_VNG',
            'BayerBG2RGB_VNG': 'COLOR_BayerBG2RGB_VNG',
            'BayerGB2RGB_VNG': 'COLOR_BayerGB2RGB_VNG',
            'BayerRG2RGB_VNG': 'COLOR_BayerRG2RGB_VNG',
            'BayerGR2RGB_VNG': 'COLOR_BayerGR2RGB_VNG',
            'BayerBG2BGR_EA': 'COLOR_BayerBG2BGR_EA',
            'BayerGB2BGR_EA': 'COLOR_BayerGB2BGR_EA',
            'BayerRG2BGR_EA': 'COLOR_BayerRG2BGR_EA',
            'BayerGR2BGR_EA': 'COLOR_BayerGR2BGR_EA',
            'BayerRGGB2BGR_EA': 'COLOR_BayerRGGB2BGR_EA',
            'BayerGRBG2BGR_EA': 'COLOR_BayerGRBG2BGR_EA',
            'BayerBGGR2BGR_EA': 'COLOR_BayerBGGR2BGR_EA',
            'BayerGBRG2BGR_EA': 'COLOR_BayerGBRG2BGR_EA',
            'BayerRGGB2RGB_EA': 'COLOR_BayerRGGB2RGB_EA',
            'BayerGRBG2RGB_EA': 'COLOR_BayerGRBG2RGB_EA',
            'BayerBGGR2RGB_EA': 'COLOR_BayerBGGR2RGB_EA',
            'BayerGBRG2RGB_EA': 'COLOR_BayerGBRG2RGB_EA',
            'BayerBG2RGB_EA': 'COLOR_BayerBG2RGB_EA',
            'BayerGB2RGB_EA': 'COLOR_BayerGB2RGB_EA',
            'BayerRG2RGB_EA': 'COLOR_BayerRG2RGB_EA',
            'BayerGR2RGB_EA': 'COLOR_BayerGR2RGB_EA',
            'BayerBG2BGRA': 'COLOR_BayerBG2BGRA',
            'BayerGB2BGRA': 'COLOR_BayerGB2BGRA',
            'BayerRG2BGRA': 'COLOR_BayerRG2BGRA',
            'BayerGR2BGRA': 'COLOR_BayerGR2BGRA',
            'BayerRGGB2BGRA': 'COLOR_BayerRGGB2BGRA',
            'BayerGRBG2BGRA': 'COLOR_BayerGRBG2BGRA',
            'BayerBGGR2BGRA': 'COLOR_BayerBGGR2BGRA',
            'BayerGBRG2BGRA': 'COLOR_BayerGBRG2BGRA',
            'BayerRGGB2RGBA': 'COLOR_BayerRGGB2RGBA',
            'BayerGRBG2RGBA': 'COLOR_BayerGRBG2RGBA',
            'BayerBGGR2RGBA': 'COLOR_BayerBGGR2RGBA',
            'BayerGBRG2RGBA': 'COLOR_BayerGBRG2RGBA',
            'BayerBG2RGBA': 'COLOR_BayerBG2RGBA',
            'BayerGB2RGBA': 'COLOR_BayerGB2RGBA',
            'BayerRG2RGBA': 'COLOR_BayerRG2RGBA',
            'BayerGR2RGBA': 'COLOR_BayerGR2RGBA',
        }
    },
    // edge cases for: resize
    resize: {
        "Interpolation": {
            // edge cases for resize - Interpolation
            'INTER_NEAREST': 'INTER_NEAREST',
            'INTER_LINEAR': 'INTER_LINEAR',
            'INTER_CUBIC': 'INTER_CUBIC',
            'INTER_AREA': 'INTER_AREA',
            'INTER_LANCZOS4': 'INTER_LANCZOS4',
            'INTER_LINEAR_EXACT': 'INTER_LINEAR_EXACT',
            'INTER_NEAREST_EXACT': 'INTER_NEAREST_EXACT',
            'INTER_MAX': 'INTER_MAX',
            'WARP_FILL_OUTLIERS': 'WARP_FILL_OUTLIERS',
            'WARP_INVERSE_MAP': 'WARP_INVERSE_MAP',
        }
    },
    // edge cases for: threshold
    threshold: {
        "Threshold Type": {
            // edge cases for threshold - Threshold Type
            'THRESH_BINARY': 'THRESH_BINARY',
            'THRESH_BINARY_INV': 'THRESH_BINARY_INV',
            'THRESH_TRUNC': 'THRESH_TRUNC',
            'THRESH_TOZERO': 'THRESH_TOZERO',
            'THRESH_TOZERO_INV': 'THRESH_TOZERO_INV',
        }
    },
    // edge cases for: GaussianBlur
    GaussianBlur: {
        "Border Type": CommonConversions["BORDER"] // edge cases for GaussianBlur - Border Type
    },
    // edge cases for: blur
    blur: {
        "Border Type": CommonConversions["BORDER"] // edge cases for blur - Border Type
    },
    // edge cases for: bilateralFilter
    bilateralFilter: {
        "Border Type": CommonConversions["BORDER"] // edge cases for bilateralFilter - Border Type
    },
    // edge cases for: findContours
    findContours: {
        "Retrieval Mode": {
            // edge cases for findContours - Retrieval Mode
            'RETR_EXTERNAL': 'RETR_EXTERNAL',
            'RETR_LIST': 'RETR_LIST',
            'RETR_CCOMP': 'RETR_CCOMP',
            'RETR_TREE': 'RETR_TREE',
            'RETR_FLOODFILL': 'RETR_FLOODFILL',
        },
        "Approximation Method": {
            // edge cases for findContours - Approximation Method
            'CHAIN_APPROX_NONE': 'CHAIN_APPROX_NONE',
            'CHAIN_APPROX_SIMPLE': 'CHAIN_APPROX_SIMPLE',
            'CHAIN_APPROX_TC89_L1': 'CHAIN_APPROX_TC89_L1',
            'CHAIN_APPROX_TC89_KCOS': 'CHAIN_APPROX_TC89_KCOS',
        }
    },
    // edge cases for: adaptiveThreshold
    adaptiveThreshold: {
        "Adaptive Method": {
            // edge cases for adaptiveThreshold - Adaptive Method
            'ADAPTIVE_THRESH_MEAN_C': 'ADAPTIVE_THRESH_MEAN_C',
            'ADAPTIVE_THRESH_GAUSSIAN_C': 'ADAPTIVE_THRESH_GAUSSIAN_C',
        },
        "Threshold Type": {
            // edge cases for adaptiveThreshold - Threshold Type
            'THRESH_BINARY': 'THRESH_BINARY',
            'THRESH_BINARY_INV': 'THRESH_BINARY_INV',
        }
    },
}

var noimg = [ // codeify auto adds INPUTimg to functions that need it, but some dont need it, these being the ones below where it skips adding it / it is not needed
    "bitwise_and",
]

export {Cases, noimg};